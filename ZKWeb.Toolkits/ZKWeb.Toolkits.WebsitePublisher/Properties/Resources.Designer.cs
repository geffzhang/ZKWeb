//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZKWeb.Toolkits.WebsitePublisher.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ZKWeb.Toolkits.WebsitePublisher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 Asp.Net Core Launcher exe not found 的本地化字符串。
        /// </summary>
        internal static string AspNetCoreLauncherExeNotFound {
            get {
                return ResourceManager.GetString("AspNetCoreLauncherExeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Bin directory not found, please follow these instructions:
        ///First, please choose directory contains `web.config` as the `website root`
        ///for example &apos;Hello.World\src\Hello.World.AspNetCore`
        ///Second, if your project type is Asp.Net or Owin, please compile it with `Release` configuration
        ///and if your project type is Asp.Net Core, you need to run the folowing command:
        ///dotnet publish -f netcoreapp2.0 -c Release -r win10-x64 的本地化字符串。
        /// </summary>
        internal static string BinDirectoryNotFound {
            get {
                return ResourceManager.GetString("BinDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Configuration can&apos;t be empty 的本地化字符串。
        /// </summary>
        internal static string ConfigurationCantBeEmpty {
            get {
                return ResourceManager.GetString("ConfigurationCantBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Framework can&apos;t be empty 的本地化字符串。
        /// </summary>
        internal static string FrameworkCantBeEmpty {
            get {
                return ResourceManager.GetString("FrameworkCantBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 OutputDirectory can&apos;t be empty 的本地化字符串。
        /// </summary>
        internal static string OutputDirectoryCantBeEmpty {
            get {
                return ResourceManager.GetString("OutputDirectoryCantBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 OutputName can&apos;t be empty 的本地化字符串。
        /// </summary>
        internal static string OutputNameCantBeRmpty {
            get {
                return ResourceManager.GetString("OutputNameCantBeRmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Plugin directory for {0} not found 的本地化字符串。
        /// </summary>
        internal static string PluginDirectoryFor_0_NotFound {
            get {
                return ResourceManager.GetString("PluginDirectoryFor_0_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 web.config not found
        ///please choose the project directory contains `web.config`
        ///for example: &apos;Hello.World\src\Hello.World.AspNetCore 的本地化字符串。
        /// </summary>
        internal static string WebConfigNotFound {
            get {
                return ResourceManager.GetString("WebConfigNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 WebRoot can&apos;t be empty 的本地化字符串。
        /// </summary>
        internal static string WebRootCantBeEmpty {
            get {
                return ResourceManager.GetString("WebRootCantBeEmpty", resourceCulture);
            }
        }
    }
}
